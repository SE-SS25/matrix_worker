services:
  worker:
    build:
      context: .
      dockerfile: docker/lord/debug/Dockerfile
      # dockerfile: ./docker/lord/release/Dockerfile
    # container_name: matrix-lord
    restart: unless-stopped
    env_file:
      - docker/lord/.env
    expose:
      - "8080"
    networks:
      - matrix-kingdom
    deploy:
      replicas: 15
      restart_policy:
        condition: on-failure
    depends_on:
      postgres:
        condition: service_started
      mongo:
        condition: service_started

  postgres:
    image: postgres
    command: -c 'max_connections=1000'
    container_name: matrix-pg
    restart: unless-stopped
    env_file:
      - docker/lord/.env
    volumes:
      - matrix-pg_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - matrix-kingdom
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U username -d db'" ]

  mongo:
    image: mongo
    container_name: matrix-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - matrix-mongo_db:/data/db
    ports:
      - "27017:27017"
    networks:
      - matrix-kingdom

  mongo-express:
    image: mongo-express
    container_name: matrix-mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    ports:
      - "8079:8081"
    networks:
      - matrix-kingdom

  caddy:
    image: caddy
    container_name: matrix-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - matrix-kingdom
    depends_on:
      - worker


networks:
  matrix-kingdom:
    name: matrix-kingdom

volumes:
  matrix-pg_db:
  matrix-mongo_db:
  caddy_data:
  caddy_config:
